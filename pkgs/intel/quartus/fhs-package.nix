{ pkgs, myLib }:

myLib.finalPkgGenerator.override {
  mainProgram = "quartus";

  fhsEnv = pkgs.callPackage ./fhs.nix { inherit myLib; requireInstallDir = true; };

  executables = [
    "clearbox"
    "dmf_ver"
    "jtagconfig"
    "jtagd"
    "jtagquery"
    "juart-terminal"
    "mega_alt_fault_injection"
    "mega_symc"
    "mega_symcng"
    "mif2hex"
    "mw-regenerate"
    "nios2-flash-programmer"
    "nios2-gdb-server"
    "nios2-terminal"
    "openocd"
    "openocd-cfg-gen"
    "pll_cmd"
    "qatc"
    "qbnl"
    "qcmd"
    "qcrypt"
    "qemit"
    "qeslc"
    "qfid"
    "qmegawiz"
    "qmegawizq"
    "qnsm"
    "qnui"
    "qpgmt"
    "qppl"
    "qred"
    "qreg"
    "qsme"
    "quartus"
    "quartus_asm"
    "quartus_cdb"
    "quartus_cmd"
    "quartus_cpf"
    "quartus_drc"
    "quartus_dse"
    "quartus_dsew"
    "quartus_eda"
    "quartus_fid"
    "quartus_fif"
    "quartus_fit"
    "quartus_hps"
    "quartus-ip-catalog"
    "quartus_jbcc"
    "quartus_jli"
    "quartus_map"
    "quartus_npp"
    "quartus_pgm"
    "quartus_pgmw"
    "quartus_pow"
    "quartus_py"
    "quartus_sh"
    "quartus_si"
    "quartus_sim"
    "quartus_sta"
    "quartus_staw"
    "quartus_stp"
    "quartus_stp_tcl"
    "quartus_stpw"
    "quartus_syn"
    "quartus_template"
    "quartus_worker"
    "qwed"
    "tclsh"
    "uniphy_mcc"
    "wish"
    "xcvr_diffmifgen"
  ];
}
